{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","this","filteredrobo","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdF,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,GAAGC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MACxB,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,mCAAgCL,EAAhC,cACnB,gCACC,6BAAKC,IACL,4BAAIC,WCcMI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACU,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GAC1B,OACC,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCOKC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACE,qBAAKT,UAAW,MAAhB,SACC,uBACCA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCEFI,G,MATA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAoBC,OAAQ,SAAtE,SACEJ,EAAMK,aCkDKC,E,kDA9Cd,aAAc,IAAD,8BACZ,gBAYDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAZxC,EAAKC,MAAQ,CACZvB,OAAS,GACToB,YAAc,IAJH,E,qDAOb,WAAoB,IAAD,OAClBI,MAAM,8CACJtC,MAAK,SAAAuC,GAAQ,OAAEA,EAASC,UACxBxC,MAAK,SAAAyC,GAAQ,EAAKR,SAAS,CAACnB,OAAO2B,S,oBAOtC,WAAU,IAAD,EACqBC,KAAKL,MAA5BvB,EADE,EACFA,OAAQoB,EADN,EACMA,YAERS,EAAe7B,EAAO8B,QAAO,SAAAC,GAClC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASb,EAAYY,kBAGtD,OAAQhC,EAAOkC,OAGb,sBAAKtC,UAAW,KAAhB,UAEA,oBAAIA,UAAY,KAAhB,0BAEA,cAAC,EAAD,CAAWS,aAAcuB,KAAKX,iBAE9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,SATnB,sD,GA1BeM,aCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDxD,M","file":"static/js/main.1b3fb4ee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ( { id,name,email } ) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pd3 ma2 grow bw2 shadow-5 '>\r\n\t\t\t<img alt='robot' src = {`https://robohash.org/test${id}?100*100`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n           <div>\r\n            {\r\n            \trobots.map((user,i) =>{\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey={i} \r\n\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n        \t}\r\n           </div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn(\r\n\t\t\t<div className ='pa2'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\t\ttype = 'search'\r\n\t\t\t\t\tplaceholder = 'Search Robots' \r\n\t\t\t\t\tonChange = {searchChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black',  height: '800px'}} >\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default Scroll","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n// import { robots } from './robots';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=>response.json())\r\n\t\t\t.then(users=>{this.setState({robots:users})});\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst{robots, searchfield} = this.state;\r\n\r\n\t\tconst filteredrobo = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading the page</h1>:\r\n\t\t\t(\r\n\t\t\t\t<div className ='tc'>\r\n\t\t\t\t\r\n\t\t\t\t<h1 className = 'f1'> RoboFriends</h1>\r\n\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<CardList robots={filteredrobo}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App/> , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}